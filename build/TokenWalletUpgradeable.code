.version sol 0.49.0

.pragma selector-save-my-code

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
ENDS
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 39
THROW 100
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0

.macro fallback_macro
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
CALLREF {
	CALL $c7_to_c4$
}

.macro supportsInterface
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 46
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
LDU 32
ENDS
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 47
PUSHINT 1146569348
PUSHINT 1231640703
XOR
PUSHINT 1717423775
XOR
PUSHINT 176198223
XOR
PUSHINT 1509709206
XOR
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 55
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHINT 64
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
EQUAL
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHSLICE x0000000000000000000000002c813b0a6_
	STSLICER
	STI 1
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	INDEX 2
	GETGLOB 9
	ROLL 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 106
	STZEROES
	GETGLOB 4
	INDEX 5
	STUR 32
	STI 1
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro version
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 74
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
ENDS
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 75
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHINT 64
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
GETGLOB 13
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHSLICE x00000000000000000000000024ccaa4c6_
	STSLICER
	STU 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	INDEX 2
	GETGLOB 9
	ROLL 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 106
	STZEROES
	GETGLOB 4
	INDEX 5
	STUR 32
	STU 32
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro balance
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 78
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
ENDS
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 79
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHINT 64
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
GETGLOB 12
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHSLICE x000000000000000000000000325a561fe_
	STSLICER
	STU 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	INDEX 2
	GETGLOB 9
	ROLL 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 106
	STZEROES
	GETGLOB 4
	INDEX 5
	STUR 32
	STU 128
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro owner
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 82
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
ENDS
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 83
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHINT 64
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
GETGLOB 11
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	SWAP
	NEWC
	STSLICECONST x9f013291
	STSLICE
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	INDEX 2
	GETGLOB 9
	ROLL 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 1
	STUR 106
	SWAP
	NEWC
	GETGLOB 4
	INDEX 5
	STUR 32
	STSLICE
	STBREFR
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro root
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 86
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
ENDS
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 87
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHINT 64
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
GETGLOB 10
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	SWAP
	NEWC
	STSLICECONST xc4574284
	STSLICE
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	INDEX 2
	GETGLOB 9
	ROLL 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 1
	STUR 106
	SWAP
	NEWC
	GETGLOB 4
	INDEX 5
	STUR 32
	STSLICE
	STBREFR
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro walletCode
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 90
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
ENDS
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 91
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHINT 64
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
GETGLOB 1
PUSHREF {
	DUP
	SETGLOB 1
	BLESS
	JMPX
}
NEWC
STSLICECONST x8adb35
STREF
STSLICE
ENDC
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHSLICE x000000000000000000000000399773a7e_
	STSLICER
	STREF
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	INDEX 2
	GETGLOB 9
	ROLL 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 106
	STZEROES
	GETGLOB 4
	INDEX 5
	STUR 32
	STREF
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro platformCode
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 94
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
ENDS
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 95
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHINT 64
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
GETGLOB 14
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHSLICE x00000000000000000000000020215fbea_
	STSLICER
	STREF
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	INDEX 2
	GETGLOB 9
	ROLL 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 106
	STZEROES
	GETGLOB 4
	INDEX 5
	STUR 32
	STREF
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro getDetails
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 98
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
ENDS
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 99
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHINT 64
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
GETGLOB 10
GETGLOB 11
GETGLOB 12
TRIPLE
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	SWAP
	NEWC
	STSLICECONST xd78a750c
	SWAP
	UNTRIPLE
	REVERSE 4, 0
	STSLICE
	ROTREV
	NEWC
	STSLICE
	STU 128
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	INDEX 2
	GETGLOB 9
	ROLL 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 1
	STUR 106
	SWAP
	NEWC
	GETGLOB 4
	INDEX 5
	STUR 32
	SWAP
	UNTRIPLE
	REVERSE 4, 0
	STSLICE
	ROTREV
	NEWC
	STSLICE
	STU 128
	STBREFR
	STBREFR
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro transfer
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 119
LDUQ 128
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
LDMSGADDRQ
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
LDUQ 128
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
LDMSGADDRQ
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
LDIQ 1
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDI 1
}
IFNOT
LDREF
ENDS
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 68
GETGLOB 11
GETGLOB 9
SDEQ
THROWIFNOT 1000
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 131
PUSH S5
GTINT 0
THROWIFNOT 1050
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 132
PUSH S5
GETGLOB 12
LEQ
THROWIFNOT 1060
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 133
PUSH S4
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
DUP
PUSHCONT {
	DROP
	PUSH S4
	GETGLOB 11
	SDEQ
	NOT
}
IF
THROWIFNOT 1030
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 135
CALLREF {
	CALL $_reserve_internal_macro$
}
PUSHINT 0
RAWRESERVE
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 137
ROLL 4
CALLREF {
	CALL $_buildWalletInitData_internal_macro$
}
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 139
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 141
PUSH S5
GTINT 0
PUSHCONT {
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 142
	PUSH S4
	GETGLOB 11
	GETGLOB 13
	GETGLOB 1
	PUSHREF {
		DUP
		SETGLOB 1
		BLESS
		JMPX
	}
	NEWC
	STSLICECONST x8adb35
	STREF
	STSLICE
	ENDC
	PUSH2 S5, S5
	HASHCU
	MYADDR
	PARSEMSGADDR
	INDEX 2
	NEWC
	STSLICECONST x9_
	STI 8
	STU 256
	ENDC
	CTOS
	ROLLREV 5
	PUSH2 S11, S5
	NEWC
	STSLICECONST x62_
	STSLICE
	SWAP
	STGRAMS
	PUSHSLICE x000000000000000000000000007_
	STSLICER
	STREF
	STSLICECONST 1
	ROLLREV 4
	NEWC
	STSLICECONST x15a038fb
	STREF
	STU 32
	STSLICE
	SWAP
	NEWC
	STSLICE
	STBREFR
	STBREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
	NIP
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
}
PUSHCONT {
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 149
	OVER
	HASHCU
	NEWC
	STSLICECONST x801_
	STU 256
	ENDC
	CTOS
	NIP
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
}
IFELSE
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 152
GETGLOB 12
PUSH S7
SUB
UFITS 128
SETGLOB 12
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 154
GETGLOB 11
NEWC
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 155
STSLICE
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 156
ROLL 5
SWAP
STSLICE
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 157
ROLL 4
SWAP
STI 1
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 158
ROLL 3
SWAP
STREF
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 160
ENDC
ROLL 4
ROT
TRUE
NEWC
STSLICECONST x6_
STI 1
PUSHINT 3
STZEROES
STSLICE
PUSHSLICE x00000000000000000000000000001501249f_
STSLICER
STU 128
STREF
ENDC
PUSHINT 128
SENDRAWMSG
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
DROP2
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro transferToWallet
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 175
LDUQ 128
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
LDMSGADDRQ
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
LDMSGADDRQ
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
LDIQ 1
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDI 1
}
IFNOT
LDREF
ENDS
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 68
GETGLOB 11
GETGLOB 9
SDEQ
THROWIFNOT 1000
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 186
PUSH S4
GTINT 0
THROWIFNOT 1050
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 187
PUSH S4
GETGLOB 12
LEQ
THROWIFNOT 1060
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 188
PUSH S3
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
DUP
PUSHCONT {
	DROP
	PUSH S3
	MYADDR
	SDEQ
	NOT
}
IF
THROWIFNOT 1030
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 190
CALLREF {
	CALL $_reserve_internal_macro$
}
PUSHINT 0
RAWRESERVE
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 192
GETGLOB 12
PUSH S5
SUB
UFITS 128
SETGLOB 12
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 194
GETGLOB 11
NEWC
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 195
STSLICE
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 196
ROLL 3
SWAP
STSLICE
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 197
XCHG S1, S2
STI 1
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 198
STREF
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 200
ENDC
ROTREV
TRUE
NEWC
STSLICECONST x6_
STI 1
PUSHINT 3
STZEROES
STSLICE
PUSHSLICE x00000000000000000000000000001501249f_
STSLICER
STU 128
STREF
ENDC
PUSHINT 128
SENDRAWMSG
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro burn
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 215
LDUQ 128
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
LDMSGADDRQ
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
LDMSGADDRQ
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
LDREF
ENDS
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 68
GETGLOB 11
GETGLOB 9
SDEQ
THROWIFNOT 1000
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 220
CALLREF {
	CALL $_reserve_internal_macro$
}
CALLREF {
	CALL $_burn_internal_macro$
}
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro acceptTransfer
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 235
LDUQ 128
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
LDREF
ENDS
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 236
CTOS
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 237
DUP
LDMSGADDR
POP S2
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 238
GETGLOB 9
OVER
CALLREF {
	CALL $_buildWalletInitData_internal_macro$
}
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
SDEQ
THROWIFNOT 1100
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 239
DUP
GETGLOB 11
SDEQ
THROWIF 1030
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 241
CALLREF {
	CALL $_reserve_internal_macro$
}
PUSHINT 2
RAWRESERVE
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 243
OVER
LDMSGADDR
POP S3
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 244
PUSH S2
LDI 1
POP S4
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 246
GETGLOB 12
PUSH S5
ADD
UFITS 128
SETGLOB 12
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 248
PUSHCONT {
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 249
	PUSH S2
	LDREF
	POP S4
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 250
	OVER
	GETGLOB 9
	PUSH2 S4, S6
	GETGLOB 10
	GETGLOB 11
	FALSE
	NEWC
	STSLICECONST x6_
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	PUSHINT 1
	STUR 111
	ROLLREV 6
	NEWC
	STSLICECONST x70d89fc9
	STSLICE
	STU 128
	ROLLREV 4
	NEWC
	STSLICE
	ROLLREV 3
	NEWC
	STSLICE
	ROTREV
	NEWC
	STSLICE
	STREF
	STBREFR
	STBREFR
	STBREFR
	STBREFR
	ENDC
	PUSHINT 128
	ADDCONST 2
	UFITS 8
	SENDRAWMSG
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
}
PUSHCONT {
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 263
	DUP
	NEWC
	STSLICECONST x42_
	STSLICE
	PUSHINT 111
	STZEROES
	ENDC
	PUSHINT 128
	ADDCONST 2
	UFITS 8
	SENDRAWMSG
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
}
IFELSE
BLKDROP 4
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro acceptMint
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 273
LDUQ 128
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
LDREF
ENDS
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 63
GETGLOB 10
GETGLOB 9
SDEQ
THROWIFNOT 1010
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 278
CALLREF {
	CALL $_reserve_internal_macro$
}
PUSHINT 2
RAWRESERVE
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 280
CTOS
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 281
DUP
LDMSGADDR
POP S2
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 282
OVER
LDI 1
POP S3
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 284
GETGLOB 12
PUSH S4
ADD
UFITS 128
SETGLOB 12
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 286
PUSHCONT {
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 287
	OVER
	LDREF
	POP S3
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 288
	PUSH2 S1, S3
	GETGLOB 10
	GETGLOB 11
	FALSE
	NEWC
	STSLICECONST x6_
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	PUSHINT 1
	STUR 111
	ROLLREV 4
	NEWC
	STSLICECONST x7a9ede2b
	STSLICE
	STU 128
	ROTREV
	NEWC
	STSLICE
	STREF
	STBREFR
	STBREFR
	ENDC
	PUSHINT 128
	ADDCONST 2
	UFITS 8
	SENDRAWMSG
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
}
PUSHCONT {
	DUP
	PARSEMSGADDR
	INDEX 3
	PLDU 256
	NEQINT 0
	DUP
	PUSHCONT {
		DROP
		DUP
		MYADDR
		SDEQ
		NOT
	}
	IF
	PUSHCONT {
		.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 299
		DUP
		NEWC
		STSLICECONST x42_
		STSLICE
		PUSHINT 111
		STZEROES
		ENDC
		PUSHINT 128
		ADDCONST 2
		UFITS 8
		SENDRAWMSG
		.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
	}
	IF
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
}
IFELSE
BLKDROP 3
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro burnByRoot
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 311
LDUQ 128
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
LDMSGADDRQ
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
LDMSGADDRQ
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
LDREF
ENDS
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 63
GETGLOB 10
GETGLOB 9
SDEQ
THROWIFNOT 1010
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 316
GETPARAM 7
INDEX 0
DEPTH
ADDCONST -2
PICK
SUB
UFITS 128
CALLREF {
	CALL $_burn_internal_macro$
}
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro onDeployRetry
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 323
LDREF
LDU 32
LDMSGADDRQ
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
LDMSGADDRQ
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 328
GETGLOB 9
GETGLOB 10
SDEQ
DUP
PUSHCONT {
	DROP
	OVER
	CALLREF {
		CALL $_buildWalletInitData_internal_macro$
	}
	HASHCU
	NEWC
	STSLICECONST x801_
	STU 256
	ENDC
	CTOS
	GETGLOB 9
	SDEQ
}
IFNOT
THROWIFNOT 100
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 330
CALLREF {
	CALL $_reserve_internal_macro$
}
PUSHINT 0
RAWRESERVE
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 332
DUP
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
DUP
PUSHCONT {
	DROP
	DUP
	MYADDR
	SDEQ
	NOT
}
IF
PUSHCONT {
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 333
	DUP
	NEWC
	STSLICECONST x42_
	STSLICE
	PUSHINT 111
	STZEROES
	ENDC
	PUSHINT 128
	ADDCONST 2
	UFITS 8
	SENDRAWMSG
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
}
IF
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
BLKDROP 4
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro destroy
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 342
LDMSGADDRQ
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 68
GETGLOB 11
GETGLOB 9
SDEQ
THROWIFNOT 1000
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 343
GETGLOB 12
THROWIF 1070
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 344
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHINT 128
ADDCONST 32
UFITS 8
SENDRAWMSG
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro upgrade
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 347
LDMSGADDRQ
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 68
GETGLOB 11
GETGLOB 9
SDEQ
THROWIFNOT 1000
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 348
GETGLOB 11
GETGLOB 13
GETGLOB 10
FALSE
NEWC
STSLICECONST x6_
STI 1
PUSHINT 3
STZEROES
STSLICE
PUSHINT 1
STUR 111
ROLLREV 3
NEWC
STSLICECONST x14fdada0
STU 32
STSLICE
SWAP
NEWC
STSLICE
STBREFR
STBREFR
ENDC
PUSHINT 64
SENDRAWMSG
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro acceptUpgrade
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 355
LDREF
LDU 32
LDMSGADDRQ
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 63
GETGLOB 10
GETGLOB 9
SDEQ
THROWIFNOT 1010
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 356
CALLREF {
	CALL $_reserve_internal_macro$
}
PUSHINT 0
RAWRESERVE
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 357
GETGLOB 13
PUSH S2
EQUAL
PUSHCONT {
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 358
	DUP
	NEWC
	STSLICECONST x42_
	STSLICE
	PUSHINT 111
	STZEROES
	ENDC
	PUSHINT 128
	ADDCONST 2
	UFITS 8
	SENDRAWMSG
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
}
PUSHCONT {
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 360
	GETGLOB 10
	NEWC
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 362
	STSLICE
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 363
	GETGLOB 11
	SWAP
	STSLICE
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 364
	GETGLOB 12
	SWAP
	STU 128
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 365
	GETGLOB 13
	SWAP
	STU 32
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 366
	PUSH S2
	SWAP
	STU 32
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 367
	OVER
	SWAP
	STSLICE
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 369
	GETGLOB 14
	SWAP
	STREF
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 371
	PUSH S3
	SETCODE
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 372
	PUSH S3
	CTOS
	DUP
	PUSHSLICE x8adb35
	SDEQ
	PUSHCONT {
		PLDREFIDX 1
		CTOS
	}
	IF
	PLDREF
	CTOS
	BLESS
	POP C3
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 373
	ENDC
	CALLREF {
		CALL $:onCodeUpgrade$
	}
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
}
IFELSE
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
BLKDROP 3
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro on_bounce_macro
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 387
CALLREF {
	CALL $_reserve_internal_macro$
}
PUSHINT 2
RAWRESERVE
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 389
DUP
LDU 32
POP S2
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 391
DUP
PUSHINT 176198223
EQUAL
PUSHCONT {
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 392
	OVER
	LDU 128
	POP S3
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 393
	GETGLOB 12
	OVER
	ADD
	UFITS 128
	SETGLOB 12
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 394
	GETGLOB 9
	SWAP
	GETGLOB 10
	GETGLOB 11
	FALSE
	NEWC
	STSLICECONST x6_
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	PUSHINT 1
	STUR 111
	ROLLREV 3
	NEWC
	STSLICECONST x0bfbc3cb
	STSLICE
	STU 128
	SWAP
	NEWC
	STSLICE
	STBREFR
	STBREFR
	ENDC
	PUSHINT 128
	ADDCONST 2
	UFITS 8
	SENDRAWMSG
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
}
PUSHCONT {
	DUP
	PUSHINT 436983925
	EQUAL
	PUSHCONT {
		.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 404
		OVER
		LDU 128
		POP S3
		.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 405
		GETGLOB 12
		OVER
		ADD
		UFITS 128
		SETGLOB 12
		.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 406
		GETGLOB 10
		GETGLOB 11
		FALSE
		NEWC
		STSLICECONST x6_
		STI 1
		PUSHINT 3
		STZEROES
		STSLICE
		PUSHINT 1
		STUR 111
		ROTREV
		NEWC
		STSLICECONST x6fa1c6a4
		STSLICE
		STU 128
		STBREFR
		ENDC
		PUSHINT 128
		ADDCONST 2
		UFITS 8
		SENDRAWMSG
		.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
	}
	IF
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
}
IFELSE
DROP2
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
CALLREF {
	CALL $c7_to_c4$
}

.globl	_reserve_internal
.type	_reserve_internal, @function
CALL $_reserve_internal_macro$

.macro _reserve_internal_macro
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 420
GETPARAM 7
INDEX 0
DEPTH
ADDCONST -2
PICK
SUB
UFITS 128
PUSHINT 100000000
MAX
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0

.globl	_burn_internal
.type	_burn_internal, @function
CALL $_burn_internal_macro$

.macro _burn_internal_macro
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 430
PUSH S4
GTINT 0
THROWIFNOT 1050
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 431
PUSH S4
GETGLOB 12
LEQ
THROWIFNOT 1060
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 433
PUSHINT 0
RAWRESERVE
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 435
GETGLOB 12
PUSH S4
SUB
UFITS 128
SETGLOB 12
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 437
GETGLOB 11
NEWC
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 438
STSLICE
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 439
ROLL 3
SWAP
STSLICE
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 440
XCHG S1, S2
STSLICE
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 441
STREF
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 443
ENDC
SWAP
GETGLOB 10
TRUE
NEWC
STSLICECONST x6_
STI 1
PUSHINT 3
STZEROES
STSLICE
PUSHSLICE x00000000000000000000000000003417b0eb_
STSLICER
STU 128
STREF
ENDC
PUSHINT 128
SENDRAWMSG
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0

.globl	_buildWalletInitData_internal
.type	_buildWalletInitData_internal, @function
CALL $_buildWalletInitData_internal_macro$

.macro _buildWalletInitData_internal_macro
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 450
NEWDICT
PUSHINT 0
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 64
DICTUSETB
GETGLOB 10
PUSHINT 1
ROT
PUSHINT 64
DICTUSET
SWAP
PUSHINT 2
ROT
PUSHINT 64
DICTUSET
NEWC
STDICT
ENDC
GETGLOB 14
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0

.internal-alias :onCodeUpgrade, 2
.internal :onCodeUpgrade
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 462
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 10
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 11
PUSHINT 0
SETGLOB 12
PUSHINT 0
SETGLOB 13
PUSHREF {
}
SETGLOB 14
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 464
PUSHINT 0
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 465
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 467
ROT
CTOS
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 468
DUP
LDMSGADDR
LDMSGADDR
LDU 128
LDU 32
LDU 32
LDMSGADDR
POP S7
REVERSE 6, 0
SETGLOB 10
SETGLOB 11
SETGLOB 12
DROP
SETGLOB 13
POP S2
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 477
LDREF
DROP
SETGLOB 14
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 479
DUP
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
DUP
PUSHCONT {
	DROP
	DUP
	MYADDR
	SDEQ
	NOT
}
IF
PUSHCONT {
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 480
	DUP
	NEWC
	STSLICECONST x42_
	STSLICE
	PUSHINT 111
	STZEROES
	ENDC
	PUSHINT 128
	ADDCONST 2
	UFITS 8
	SENDRAWMSG
	.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
}
IF
.loc ../contracts/upgradeable/TokenWalletUpgradeable.sol, 0
DROP2
CALLREF {
	CALL $c7_to_c4$
}
COMMIT
THROW 0

.macro c7_to_c4
GETGLOB 14
GETGLOB 13
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
STSLICE
ROLLREV 4
NEWC
STSLICE
STU 128
STU 32
STREF
STBREFR
ENDC
POPROOT

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDU 128
LDU 32
LDREF
ENDS
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHREFCONT {
	CALL $c4_to_c7$
}
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 10
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 11
	PUSHINT 0
	SETGLOB 12
	PUSHINT 0
	SETGLOB 13
	PUSHREF {
	}
	SETGLOB 14
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
}
IFELSE

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
LDU 4 ; bounced tail
LDMSGADDR ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
GETGLOB 4
TRUE
SETINDEXQ 1
PUSHINT 10000000
SETINDEXQ 2
NULL
SETINDEXQ 3
PUSHINT 0
SETINDEXQ 4
SETGLOB 4
IFJMPREF {
	OVER
	LDSLICE 32
	NIP
	CALL $on_bounce_macro$
}
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
PUSHCONT {
	DROP
	CALLREF {
		CALL $fallback_macro$
	}
	THROW 0
}
IFNOT
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
PUSHCONT {
	DROP2
	CALLREF {
		CALL $fallback_macro$
	}
}
IF

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 9
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP
	HASHSU ; signatureSlice msgSlice hashMsgSlice
	SWAP
	LDU 1 ; signatureSlice hashMsgSlice havePubkey msgSlice
	SWAP
	PUSHCONT {
		LDU 256 ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG S3
		SWAP
	}
	PUSHCONT {
		XCHG S2
		GETGLOB 2
	}
	IFELSE
	CHKSIGNU ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
PUSHCONT {
	LDU 1 ; havePubkey msgSlice
	SWAP
	THROWIF 58 ; msgSlice
}
IFELSE
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; expireAt msgSlice
SWAP
NOW ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
PUSHCONT {
	DROP2
	CALLREF {
		CALL $fallback_macro$
	}
}
IF

.macro public_function_selector
DUP
PUSHINT 1717423775
LEQ
IFJMPREF {
	DUP
	PUSHINT 204468749
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 8748794
		EQUAL
		IFJMPREF {
			CALL $platformCode$
		}
		DUP
		PUSHINT 53907865
		EQUAL
		IFJMPREF {
			CALL $acceptUpgrade$
		}
		DUP
		PUSHINT 176198223
		EQUAL
		IFJMPREF {
			CALL $acceptTransfer$
		}
		DUP
		PUSHINT 204468749
		EQUAL
		IFJMPREF {
			CALL $burnByRoot$
		}
	}
	DUP
	PUSHINT 520172177
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 251812010
		EQUAL
		IFJMPREF {
			CALL $destroy$
		}
		DUP
		PUSHINT 322087217
		EQUAL
		IFJMPREF {
			CALL $version$
		}
		DUP
		PUSHINT 362821883
		EQUAL
		IFJMPREF {
			CALL $onDeployRetry$
		}
		DUP
		PUSHINT 520172177
		EQUAL
		IFJMPREF {
			CALL $owner$
		}
	}
	DUP
	PUSHINT 1231640703
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 839183401
		EQUAL
		IFJMPREF {
			CALL $supportsInterface$
		}
		DUP
		PUSHINT 1146569348
		EQUAL
		IFJMPREF {
			CALL $root$
		}
		DUP
		PUSHINT 1185535980
		EQUAL
		IFJMPREF {
			CALL $transferToWallet$
		}
		DUP
		PUSHINT 1231640703
		EQUAL
		IFJMPREF {
			CALL $balance$
		}
	}
	DUP
	PUSHINT 1717423775
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1445284013
		EQUAL
		IFJMPREF {
			CALL $burn$
		}
		DUP
		PUSHINT 1468691724
		EQUAL
		IFJMPREF {
			CALL $getDetails$
		}
		DUP
		PUSHINT 1509709206
		EQUAL
		IFJMPREF {
			CALL $acceptMint$
		}
		DUP
		PUSHINT 1717423775
		EQUAL
		IFJMPREF {
			CALL $walletCode$
		}
	}
}
DUP
PUSHINT 2104488532
LEQ
IFJMPREF {
	DUP
	PUSHINT 1756716863
	EQUAL
	IFJMPREF {
		CALL $constructor$
	}
	DUP
	PUSHINT 1944199491
	EQUAL
	IFJMPREF {
		CALL $transfer$
	}
	DUP
	PUSHINT 2104488532
	EQUAL
	IFJMPREF {
		CALL $upgrade$
	}
}

